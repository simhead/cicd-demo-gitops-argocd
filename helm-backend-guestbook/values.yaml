# Default values for helloworld.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
dockerRepository: "docker.io"

image:
  repository: "simhead/cicd-demo-backend"
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "46"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: true
  className: ""
  port: 8080
  annotations: {kubernetes.io/ingress.class: "nginx", nginx.ingress.kubernetes.io/ssl-redirect: "false", nginx.ingress.kubernetes.io/backend-protocol: "HTTP"}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: cicd.backend.apim.13.211.13.10.nip.io
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
  #tls:
  #  - hosts: hello

virtualservice:
  enabled: true
  name: cicd-demo-backend-vs
  system: cicd-demo-backend
# Configure the Istio ingress gateway to route outside traffic for the provided
# host name to this service on the ports and protocols defined in the 'ports' section
# above.
istioGateway:
  name: cicd-demo/istio-gateway
  host: "*" #"lvh.me" # resolves to 127.0.0.1
  matchPrefix:
#    - "/productpage"
#    - "/static"
#    - "/login"
#    - "/logout"
    - "/api/cicd"

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
